@page "/login"

@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMoviesRepository moviesRepo

@using BlazorMovies.Client.Auth

<h3>Login</h3>

<EditForm Model="userInfo" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (Movies != null)
    {
        <ul>
            @foreach (var movie in Movies)
            {
                <li>@movie.TitleBrief</li>
            }
        </ul>
    }

</EditForm>

@code {
    private UserInfo userInfo = new UserInfo();
    public List<Movie> Movies { get; set; }

    private async Task CreateUser()
    {
        var userToken = await accountsRepository.Login(userInfo);
        await loginService.Login(userToken.Token);
        navigationManager.NavigateTo("");
    }

    protected async override Task OnInitializedAsync()
    {
        Movies = await moviesRepo.GetTestMovies();
    }
}
